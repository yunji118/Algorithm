import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Collections;
import java.util.StringTokenizer;

public class BOJ_15975 {

	public static void main(String[] args) throws IOException{
		// TODO Auto-generated method stub
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int N = Integer.parseInt(br.readLine());
		//long arr[][] = new long [N+1][N+1];
		ArrayList<Integer>[] list = new ArrayList[N+1];
		StringTokenizer st;
		long res=0;
		
		for(int i=0;i<=N;i++)
			list[i] = new ArrayList<>();
		
		for(int i=0;i<N;i++) {
			st = new StringTokenizer(br.readLine());
			int pos = Integer.parseInt(st.nextToken());
			int color = Integer.parseInt(st.nextToken());
			
			list[color].add(pos);
		}
		
		for(int i=1;i<=N;i++) {
			Collections.sort(list[i]);   //거리의 오름차순으로 정렬
		}
		
		for(int i=1;i<=N;i++) {
			int min = 1000000009;
			for(int j=0;list[i].size()>1 && j<list[i].size();j++) {
				if(j==0)
					min = list[i].get(j+1) - list[i].get(j);
				else if(j+1 < list[i].size()) {
					min = Math.min(list[i].get(j) - list[i].get(j-1), list[i].get(j+1) - list[i].get(j));
				}
				else { //맨 마지막의 경우
					min = list[i].get(j) - list[i].get(j-1);
				}
				res += min;
			}
		}
		
		System.out.println(res);
		

	}

}
