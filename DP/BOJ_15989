import java.io.*;
import java.util.*;

public class Main
{
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int T = Integer.parseInt(br.readLine());
		StringBuilder sb = new StringBuilder();
		while (T-- > 0){
		    int N = Integer.parseInt(br.readLine());
		    if (N <= 3){
		        sb.append(N + "\n");
		    }
		    else{
		        int dp[][] = new int [N+1][4];  //dp[i][j]에서 i수를 j로 끝나는 수로 만들기
		        //조합이 같은 경우 1개로 계산하므로 조합을 만들 때 오름차순으로 만든다는 가정하에 진행하기
		        dp[1][1] = 1;  // 1
		        dp[2][1] = 1;  // 1+1
		        dp[2][2] = 1;  // 2
		        dp[3][1] = 1;  // 1+1+1
 		        dp[3][2] = 1;  // 1+2
		        dp[3][3] = 1;  // 3
		        for(int i = 4;i<=N;i++){
		            dp[i][1] = dp[i-1][1];  //1작은 수에 1 더하기 (끝이 1)
		            dp[i][2] = dp[i-2][1] + dp[i-2][2]; //2작은 수에 2를 더하기 (끝이 2)
		            dp[i][3] = dp[i-3][1] + dp[i-3][2] + dp[i-3][3];  //3작은 수에 3을 더하기 (끝이 3)
		        }
		        sb.append(dp[N][1]+dp[N][2]+dp[N][3] + "\n");
		    }
		}
		System.out.print(sb.toString());
	}
}
