import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class BOJ_2193 {

	public static void main(String[] args) throws IOException{
		// TODO Auto-generated method stub
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int N = Integer.parseInt(br.readLine());
		//dp[i][j] = i자리수일 때 j로 끝나는 경우의 수
		long dp[][] = new long[N+1][2];
		dp[0][0] = 0;
		dp[0][1] = 0;
		
		//1자리수는 무조건 1이어야함.
		dp[1][0] = 0;   
		dp[1][1] = 1;
		
		for(int i=2;i<=N;i++) {
			for(int j=0;j<2;j++) {
				if(j==0)  //끝자리가 0인 경우
					dp[i][j] = dp[i-1][0]+dp[i-1][1]; //이전 수가 0으로 끝나는 경우의 수 + 이전 수가 1로 끝나는 경우의 수
				else//끝자리가 1인 경우
					dp[i][j] = dp[i-1][0];  //이전 수가 0으로 끝나는 경우의 수 (이전 수가 1로 끝나면 현재 수가 11로 끝나게 되므로)
			}
				
		}
		
		System.out.println(dp[N][0]+dp[N][1]);

	}

}
