package boj;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class BOJ_1890 {

	public static void main(String[] args) throws IOException{
		// TODO Auto-generated method stub
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int N = Integer.parseInt(br.readLine());
		int map[][] = new int [N][N];
		for(int i=0;i<N;i++) {
			StringTokenizer st = new StringTokenizer(br.readLine());
			for(int j=0;j<N;j++) {
				map[i][j] = Integer.parseInt(st.nextToken());
			}
		}
		long dp[][] = new long [N][N];
		dp[0][0] = 1;
		
		for(int i=0;i<N;i++) {
			for(int j=0;j<N;j++) {
				int jump = map[i][j];
				if (jump == 0)  //얘가 없으면 종착점의 dp값이 계속 더해짐!! 
					break;
				if (i+jump < N) {
					dp[i+jump][j] += dp[i][j];
 				}
				if (j+jump < N) {
					dp[i][j+jump] += dp[i][j];
				}
			}
		}
		

		System.out.print(dp[N-1][N-1]);

	}

}
