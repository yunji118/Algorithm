import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class BOJ_11048 {
	
	private static int N, M;
	private static boolean isValid(int r, int c) {
		if (r >= 0 && r < N && c >=0 && c < M)
			return true;
		return false;
	}

	public static void main(String[] args) throws IOException{
		// TODO Auto-generated method stub
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken());
		M = Integer.parseInt(st.nextToken());
		int map[][] = new int [N][M];
		for(int i=0;i<N;i++) {
			st = new StringTokenizer(br.readLine());
			for(int j=0;j<M;j++) {
				map[i][j] = Integer.parseInt(st.nextToken());
			}
		}
		for(int i=0;i<N;i++) {
			for(int j=0;j<M;j++) {
				int max = 0;
				if (isValid(i-1, j))  //(r+1, c)
					max = Math.max(map[i-1][j], max);
				if (isValid(i, j-1))   //(r, c+1)
					max = Math.max(map[i][j-1], max);
				if (isValid(i-1, j-1))  //(r-1, c-1)
					max = Math.max(map[i-1][j-1], max);
				map[i][j] += max;
			}
		}
		System.out.println(map[N-1][M-1]);

	}

}
