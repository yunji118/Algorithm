import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.StringTokenizer;

public class BOJ_9184 {

	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		StringBuilder sb = new StringBuilder();
		int dp[][][] = new int [51][51][51];
		
		for(int i=0;i<=20;i++) {
			for(int j=0;j<=20;j++) {
				for(int k=0;k<=20;k++) {
					if (i == 0 || j == 0 || k == 0)
						dp[i][j][k] = 1;
					else if (i < j && j < k)
						dp[i][j][k] = dp[i][j][k-1] + dp[i][j-1][k-1] - dp[i][j-1][k];
					else
						dp[i][j][k] = dp[i-1][j][k] + dp[i-1][j-1][k] + dp[i-1][j][k-1] - dp[i-1][j-1][k-1];
				}
			}
		}
		
		for(int i=0;i<=50;i++) {
			for(int j=0;j<=50;j++) {
				for(int k=0;k<=50;k++) {
					if (i == 0 || j==0 || k == 0)
						dp[i][j][k] = 1;
					else if (i > 20 || j > 20 || k > 20)
						dp[i][j][k] = dp[20][20][20];
					else if (i < j && j < k)
						dp[i][j][k] = dp[i][j][k-1] + dp[i][j-1][k-1] - dp[i][j-1][k];
					else
						dp[i][j][k] = dp[i-1][j][k] + dp[i-1][j-1][k] + dp[i-1][j][k-1] - dp[i-1][j-1][k-1];
					
				}
			}
		}
		
		while(true) {
			//br = new BufferedReader ... 선언이 안에 있으면 시간초과!
			st = new StringTokenizer(br.readLine());
			int a = Integer.parseInt(st.nextToken());
			int b = Integer.parseInt(st.nextToken());
			int c = Integer.parseInt(st.nextToken());
			if (a == -1 && b == -1 && c == -1) 
				break;
			
			sb.append("w("+a+", "+b+", "+c+")"+" = "+ dp[Math.max(a, 0)][Math.max(b, 0)][Math.max(c, 0)] + "\n");			
		}
		System.out.print(sb.toString());

	}

}
