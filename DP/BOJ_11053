import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.Arrays;
import java.util.StringTokenizer;

public class BOJ_11053 {

	public static void main(String[] args) throws IOException{
		// TODO Auto-generated method stub
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		StringTokenizer st = new StringTokenizer(br.readLine());
				
		int size = Integer.parseInt(st.nextToken());  //배열의 크기 저장
		int arr [] = new int [size];    //수열의 원소 저장
		
		/*수열의 원소 입력 받아서 배열에 저장*/
		st = new StringTokenizer(br.readLine());
		for (int i=0; i<size; i++) {
			arr[i] = Integer.parseInt(st.nextToken());
		}
		
		/*length[i]는 arr[i]를 마지막으로하는 가장 긴 증가하는 부분 수열의 길이를 저장*/
		int length [] = new int [size];   
		
		for (int i=0; i<size; i++) {  
			length[i]=1;  //자기 자신만 있어도 수열의 길이는 기본적으로 1
			for (int j=0; j<i; j++) { //i보다 작은 인덱스의 arr배열을 쭉 훑으면서 arr[i]보다 작은 원소가 있으면 length[i]값 갱신하기
				if(arr[i]>arr[j]) {   
					length[i] = Math.max(length[j]+1, length[i]);  //가장 긴 걸 +1씩 갱신해나가기
				}	
			}
		}
		Arrays.sort(length);  //오름차순으로 sort
		bw.write(length[size-1]+"\n");  //가장 큰 값을 출력
		
		bw.flush();
		bw.close();
	}

}
