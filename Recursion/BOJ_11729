import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.ArrayList;

public class BOJ_11729 {

	private static int move;
	private static ArrayList<String> ans;
	private static StringBuilder sb;
	private static void hanoi_tower(int n, char from, char temp, char to) {
		move++;
		if(n == 1) {
			sb.append(from + " " + to + "\n");
			return;
		}
		else {
			hanoi_tower(n-1, from, to, temp);   //원판을 from -> temp로 옮기기
			sb.append(from + " " + to + "\n");
			hanoi_tower(n-1, temp, from, to);   //원판을 temp -> to로 옮기기
		}
	}
	public static void main(String[] args) throws IOException{
		// TODO Auto-generated method stub
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		sb = new StringBuilder();
		int N = Integer.parseInt(br.readLine());    //첫째 줄에 첫 번째 장대에 쌓인 원판의 개수
		hanoi_tower(N, '1', '2', '3');
		bw.write(move + "\n");
		bw.write(sb.toString());

		bw.flush();
		bw.close();
	}

}
