package boj;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

public class BOJ_14716 {

	private static int N, M;
	private static int map[][];
	private static class Cord{
		int r, c;
		public Cord(int r, int c) {
			this.r = r;
			this.c = c;
		}
	}
	private static void bfs(int sr, int sc) {
		Queue<Cord> que = new LinkedList<>();
		que.add(new Cord(sr, sc));
		map[sr][sc] = 0;
		int dr[] = {0,0,-1,1, -1, 1, -1, 1};
		int dc[] = {1,-1,0,0, 1, 1, -1, -1};
		while (!que.isEmpty()) {
			int r = que.peek().r;
			int c = que.peek().c;
			que.poll();
			for(int i=0;i<8;i++) { //상 하 좌 우 대각선탐색 
				int nr = r + dr[i];
				int nc = c + dc[i];
				if (nr >= 0 && nr < M && nc >= 0 && nc < N && map[nr][nc] == 1) {
					que.add(new Cord(nr, nc));
					map[nr][nc] = 0;
				}
			}
		}
	}
	public static void main(String[] args) throws IOException{
		// TODO Auto-generated method stub
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		M = Integer.parseInt(st.nextToken());
		N = Integer.parseInt(st.nextToken());
		map = new int [M][N];
		for(int i=0;i<M;i++) {
			st = new StringTokenizer(br.readLine());
			for(int j=0;j<N;j++) {
				map[i][j] = Integer.parseInt(st.nextToken());
			}
		}
		int numofchar = 0;
		for(int i=0;i<M;i++) {
			for(int j=0;j<N;j++) {
				if (map[i][j] == 1) {
					bfs(i,j);
					numofchar++;
				}
			}
		}
		System.out.print(numofchar);

	}

}
