import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

public class BOJ_16562 {

	
	private static boolean isfriends[];
	private static ArrayList<Integer> list[];
	private static void bfs(int num) {  //친구비를 낸 친구가 들어옴
		Queue<Integer> que = new LinkedList<Integer>();
		que.add(num);
		int now;
		while(!que.isEmpty()) {
			now = que.poll();  //지금 보고있는 친구
			if(isfriends[now] == false) {  //친구가 아니라면
				isfriends[now] = true; //친구 맺어주고
				for(int i=0;i<list[now].size();i++) {  //그 친구의 친구리스트를 싹 훑기
					if(isfriends[list[now].get(i)] == false) {  //친구관계가 아니라면
						que.add(list[now].get(i));
					}
				}
			}
		}
	}
	
	public static void main(String[] args) throws IOException{
		// TODO Auto-generated method stub
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		int N = Integer.parseInt(st.nextToken());  //학생 수
		int M = Integer.parseInt(st.nextToken());  //친구 관계 수
		int k = Integer.parseInt(st.nextToken());  //가지고 있는 돈
		int money[][] =  new int [N][2];  //N개의 학생이 원하는 친구 비
		st = new StringTokenizer(br.readLine());
		for(int i=0;i<N;i++) {// (친구 번호, 친구비)
			money[i][0] = i+1;  //친구번호 저장
			money[i][1] = Integer.parseInt(st.nextToken());   //i번 친구가 원하는 친구비 저장
		}
		
		//친구비의 오름차순으로 저장
		Arrays.sort(money, new Comparator<int []>() {
			@Override
			public int compare(int[] o1, int[] o2) {
				// TODO Auto-generated method stub
				if(o1[1] == o2[1])
					return o1[0]-o2[0];
				return o1[1]-o2[1];
			}
		});
		
		list = new ArrayList[N+1];
		for(int i=0;i<N+1;i++) {
			list[i] = new ArrayList<>();
		}
		for(int i=0;i<M;i++) {
			st = new StringTokenizer(br.readLine());
			int a = Integer.parseInt(st.nextToken());
			int b = Integer.parseInt(st.nextToken());
			list[a].add(b);
			list[b].add(a);			
		}
		
		isfriends = new boolean[N+1];
		
		int num;
		int cost = 0;
		for(int i=1;i<=N;i++) {
			num = money[i-1][0];  //현재 보고있는 친구 번호
			if(isfriends[num] == false) {  //친구인가?
				if(k>=money[i-1][1]) {  //친구비를 낼 수 있는가?
					k -= money[i-1][1];  //친구비 내기
					cost += money[i-1][1];
					bfs(num);
				}
			}
		}
		
		boolean flag = true;
		for(int i=1;i<=N;i++) {
			if(isfriends[i] == false) {
				flag= false;
				break;
			}
		}
		if(flag == true) {
			System.out.println(cost);
		}
		else {
			System.out.println("Oh no");
		}

	}

}
