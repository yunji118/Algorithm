import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class BOJ_2644 {

	private static int map[][];
	private static int visited[];
	private static void dfs(int v, int n) {
		for(int i=1;i<=n;i++) {
			if (visited[i] == 0 && map[v][i] == 1) {
				visited[i] = visited[v] + 1;
				dfs(i, n);
			}
		}
	}
	public static void main(String[] args) throws IOException{
		// TODO Auto-generated method stub
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int n = Integer.parseInt(br.readLine());  //전체 사람의 수
		map = new int [n+1][n+1];
		visited = new int[n+1];
		StringTokenizer st = new StringTokenizer(br.readLine());
		// 촌수를 계산해야하는 서로 다른 두 사람
		int a = Integer.parseInt(st.nextToken());
		int b = Integer.parseInt(st.nextToken());
		
		int m = Integer.parseInt(br.readLine());    //부모-자식들 간의 관계의 개수
		for(int i=0;i<m;i++) {
			st = new StringTokenizer(br.readLine());
			int x = Integer.parseInt(st.nextToken());
			int y = Integer.parseInt(st.nextToken());
			map[x][y] = map[y][x] = 1;
		}
		
		dfs(a, n);
		System.out.println(visited[b]==0 ? -1 : visited[b]);

	}

}
