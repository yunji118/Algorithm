import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

public class Main {
	
	private static int N, M;
	private static int map[][];
	private static boolean visited[][];
	private static class Cord{
		int r, c;
		public Cord(int r, int c) {
			// TODO Auto-generated constructor stub
			this.r = r;
			this.c = c;
		}
	}
	private static void bfs(int sr, int sc) {
		int dr[] = {0, 0, 1, -1};
		int dc[] = {1, -1, 0, 0};
		Queue<Cord> que = new LinkedList<>();
		que.add(new Cord(sr, sc));
		visited[sr][sc] = true;
			
		while (!que.isEmpty()) {
			int nowr = que.peek().r;
			int nowc = que.peek().c;
			que.poll();
			
			for(int i=0;i<4;i++) {
				int tempr = nowr + dr[i];
				int tempc = nowc + dc[i];
				if (tempr >= 0 && tempr < N && tempc >= 0 && tempc < M && visited[tempr][tempc] == false && map[tempr][tempc] == 1) {
					visited[tempr][tempc] = true;
					que.add(new Cord(tempr, tempc));
				}
			}
		}
	}

	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int T = Integer.parseInt(br.readLine());
		StringBuilder sb = new StringBuilder();
		while (--T >= 0) {
			StringTokenizer st = new StringTokenizer(br.readLine());
			M = Integer.parseInt(st.nextToken());    //배추밭의 가로 길이
			N = Integer.parseInt(st.nextToken());    //배추밭의 세로 길이
			int K = Integer.parseInt(st.nextToken());    //배추가 심어져 있는 위치의 개수
			map= new int [N][M];
			visited = new boolean[N][M];
			for(int i=0;i<K;i++) {
				st = new StringTokenizer(br.readLine());
				int r = Integer.parseInt(st.nextToken());
				int c = Integer.parseInt(st.nextToken());
				map[c][r] = 1;
			}
			int ans = 0;
			for(int i=0;i<N;i++) {				
				for (int j=0;j<M;j++) {
					if (map[i][j] == 1 && visited[i][j] == false) {
						bfs(i, j);
						++ans;
					}
						
				}
			}
			sb.append(ans + "\n");
 		}
		System.out.println(sb.toString());
		

	}

}
