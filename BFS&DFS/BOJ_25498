import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.ArrayList;
import java.util.Collections;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

public class camp_E {

	private static ArrayList<Integer> edgeList[];
	private static int N;
	
	private static String input;
	
	private static StringBuilder bfs() {
		ArrayList<Integer> arr = new ArrayList<>();
		StringBuilder sb = new StringBuilder();
		boolean visited[] = new boolean[N+1];
		arr.add(1);
		visited[1] = true;
		sb.append(input.charAt(0));
		
		while(!arr.isEmpty()) {
			ArrayList<Integer> valid = null;
			char max = '\0';
			for(int now:arr) {
				for(int next:edgeList[now]) {
					if(visited[next])
						continue;
					char nextchar = input.charAt(next-1);
					if(max > nextchar)
						continue;
					if(valid == null || max<input.charAt(next-1)) {
						valid = new ArrayList();
						max = input.charAt(next-1);
					}
					valid.add(next);			
					
				}
			}
			if(valid == null)
				break;
			
			sb.append(max);
			ArrayList<Integer> temp = new ArrayList<>();
			for(int next : valid) {
				visited[next] = true;
				temp.add(next);
			}
			arr = temp;
			
		}
		return sb;
		
	}
	
	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		N = Integer.parseInt(br.readLine());  //총 N개의 정점
		input = br.readLine();
		StringTokenizer st;
		
		//sb = new StringBuilder();
		edgeList = new ArrayList[N+1];
		for(int i=0;i<=N;i++) {
			edgeList[i] = new ArrayList<>();
		}
		
		for(int i=1;i<N;i++) {
			st = new StringTokenizer(br.readLine());
			int u = Integer.parseInt(st.nextToken());
			int v = Integer.parseInt(st.nextToken());
			edgeList[u].add(v);
			edgeList[v].add(u);
		}
		
		System.out.println(bfs());
		
	}
	
}
