import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

public class BOJ_1697 {

	private static int N, K;
	private static int visited[];
	private static void bfs(int now) {
		Queue<Integer> que = new LinkedList<Integer>();
		que.add(now);  //현재 위치 넣기
		
		while(!que.isEmpty()) {
			int soobin = que.poll();
			if(soobin == K) //동생의 위치와 같은 경우
				break;
			int move [] = {soobin-1, soobin+1, soobin*2}; //이동할 수 있는 위치
			for(int i=0;i<3;i++) {
				int next = move[i]; //수빈이가 이동한 상황
				if(next>=0 && next<=100000 && visited[next] == 0) {  //이동했을 때 범위 내에 있고 아직 방문하지 않은 곳인가?
					que.add(next);
					visited[next] = visited[soobin] + 1;
				}
			}
		}
	}
	public static void main(String[] args) throws IOException{
		// TODO Auto-generated method stub
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken());  //수빈이의 현재 위치
		K = Integer.parseInt(st.nextToken());  //동생의 위치
		visited = new int [100001];
		
		bfs(N); //수빈이의 현재 위치
		
		System.out.println(visited[K]);

	}

}
