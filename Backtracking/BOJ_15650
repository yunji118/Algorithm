import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class BOJ_15650 {
	
	private static int N, M;
	private static int arr[];
	private static void backtracking(int depth, int now) {
		if (depth == M) {
			for(int j=0;j<M;j++) {
				System.out.print(arr[j]+" ");
			}
			System.out.println();
			return ;
		}
		for (int i=now;i<=N;i++) {
			arr[depth] = i;
			backtracking(depth + 1, i + 1);
		}
	}

	public static void main(String[] args) throws IOException{
		// TODO Auto-generated method stub
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken()); //1부터 N까지의 자연수 중에서 중복 없이 M개 고르기
		M = Integer.parseInt(st.nextToken());
		arr = new int [M];
		backtracking(0, 1);
	}

}
